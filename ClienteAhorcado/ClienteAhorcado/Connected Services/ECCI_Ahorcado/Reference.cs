//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace ClienteAhorcado.ECCI_Ahorcado {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:ECCI_Ahorcado", ConfigurationName="ECCI_Ahorcado.ECCI_AhorcadoPort")]
    public interface ECCI_AhorcadoPort {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#setUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void setUp();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#setUp", ReplyAction="*")]
        System.Threading.Tasks.Task setUpAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#setNombre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void setNombre(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#setNombre", ReplyAction="*")]
        System.Threading.Tasks.Task setNombreAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#intentarLetra", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void intentarLetra(string letra);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#intentarLetra", ReplyAction="*")]
        System.Threading.Tasks.Task intentarLetraAsync(string letra);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#terminarJuego", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void terminarJuego();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#terminarJuego", ReplyAction="*")]
        System.Threading.Tasks.Task terminarJuegoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#getIntentos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getIntentos();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#getIntentos", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getIntentosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#getPalabraEscondida", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getPalabraEscondida();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#getPalabraEscondida", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getPalabraEscondidaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#getVictoria", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        bool getVictoria();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#getVictoria", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<bool> getVictoriaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#getLetrasUtilizadas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string getLetrasUtilizadas();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ECCI_Ahorcado#Ahorcado#getLetrasUtilizadas", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> getLetrasUtilizadasAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "urn:ECCI_Ahorcado#Ahorcado#getMarcadores", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style = System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults = true, Use = System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "return")]
        string getMarcadores();

        [System.ServiceModel.OperationContractAttribute(Action = "urn:ECCI_Ahorcado#Ahorcado#getMarcadores", ReplyAction = "*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "return")]
        System.Threading.Tasks.Task<string> getMarcadoresAsync();

    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ECCI_AhorcadoPortChannel : ClienteAhorcado.ECCI_Ahorcado.ECCI_AhorcadoPort, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ECCI_AhorcadoPortClient : System.ServiceModel.ClientBase<ClienteAhorcado.ECCI_Ahorcado.ECCI_AhorcadoPort>, ClienteAhorcado.ECCI_Ahorcado.ECCI_AhorcadoPort {
        
        public ECCI_AhorcadoPortClient() {
        }
        
        public ECCI_AhorcadoPortClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ECCI_AhorcadoPortClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ECCI_AhorcadoPortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ECCI_AhorcadoPortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void setUp() {
            base.Channel.setUp();
        }
        
        public System.Threading.Tasks.Task setUpAsync() {
            return base.Channel.setUpAsync();
        }
        
        public void setNombre(string nombre) {
            base.Channel.setNombre(nombre);
        }
        
        public System.Threading.Tasks.Task setNombreAsync(string nombre) {
            return base.Channel.setNombreAsync(nombre);
        }
        
        public void intentarLetra(string letra) {
            base.Channel.intentarLetra(letra);
        }
        
        public System.Threading.Tasks.Task intentarLetraAsync(string letra) {
            return base.Channel.intentarLetraAsync(letra);
        }
        
        public void terminarJuego() {
            base.Channel.terminarJuego();
        }
        
        public System.Threading.Tasks.Task terminarJuegoAsync() {
            return base.Channel.terminarJuegoAsync();
        }
        
        public string getIntentos() {
            return base.Channel.getIntentos();
        }
        
        public System.Threading.Tasks.Task<string> getIntentosAsync() {
            return base.Channel.getIntentosAsync();
        }
        
        public string getPalabraEscondida() {
            return base.Channel.getPalabraEscondida();
        }
        
        public System.Threading.Tasks.Task<string> getPalabraEscondidaAsync() {
            return base.Channel.getPalabraEscondidaAsync();
        }
        
        public bool getVictoria() {
            return base.Channel.getVictoria();
        }
        
        public System.Threading.Tasks.Task<bool> getVictoriaAsync() {
            return base.Channel.getVictoriaAsync();
        }
        
        public string getLetrasUtilizadas() {
            return base.Channel.getLetrasUtilizadas();
        }
  
        public System.Threading.Tasks.Task<string> getLetrasUtilizadasAsync() {
            return base.Channel.getLetrasUtilizadasAsync();
        }

        public string getMarcadores()
        {
            return base.Channel.getMarcadores();
        }

        public System.Threading.Tasks.Task<string> getMarcadoresAsync()
        {
            return base.Channel.getMarcadoresAsync();
        }
    }
}
